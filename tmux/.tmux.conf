############################
#  _
# | | By Theo
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#############################

# {{{ Basic settings
# TERM settings for Vim color rendering:
# If you are using with Kitty, it is recommended to set the default terminal to $TERM,
# since Kitty's term (`xterm-kitty`) already has Tc flag and Kitty-specific features.
# For other terminal emulators, set $TERM to tmux-256color and append Tc.
#set -g default-terminal "${TERM}"
set -g default-terminal "tmux-256color" # like "screen-256color" but with modifier key support
#set -as terminal-overrides ",xterm*:Tc"  # tell tmux that your terminal supports true color
set -as terminal-features "xterm*:RGB"  # for > 3.2, use terminal-features and RGB flag

set -g focus-events on  # allow focus events such as Vim FocusGained, FocusLost autocmd
set -g mouse on
set -g allow-rename off # do not let external programs rename your custom window name
set -g history-limit 10000
set -g base-index 1 # Anti programmer behavior
set -g escape-time 50 # Default 500 milsec: https://unix.stackexchange.com/questions/608142/whats-the-effect-of-escape-time-in-tmux
set-window-option -g pane-base-index 1
# }}}

# {{{ Keybindings
# bind or bind-key: Bind key
# bind -n: Bind without prefix
# bind -r: Execute functionality multiple times with multiple key presses (w/o retyping prefix)
# Source code where the default keys are defined:
# https://github.com/tmux/tmux/blob/master/key-bindings.c#L349

# Prefix
unbind-key C-b # "bind -N 'Send the prefix key' C-b { send-prefix }",
set -g prefix C-a
bind-key C-a send-prefix # C-a C-a sends C-a

# Reloading
bind C-r source-file ~/.tmux.conf \; display-message "Reloading ~/.tmux.conf"

# Session-related

# Window-related
unbind c # "bind -N 'Create a new window' c { new-window }",
bind c new-window -c "#{pane_current_path}"

# TODO: Resolve conflict with this keybindings
#bind r movew -r
#bind '{' swap-window -t :-1 \; previous-window
#bind '}' swap-window -t :+1 \; next-window

# Pane-related
# splits: create a new pane by horizontally creating a new line (C-W C-V in Vim)
unbind % # "bind -N 'Split window horizontally' % { split-window -h }",
bind % split-window -h -c "#{pane_current_path}"
#
unbind '"' # "bind -N 'Split window vertically' '\"' { split-window }",
bind '"' split-window -v -c "#{pane_current_path}"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
unbind l # "bind -N 'Select the previously current window' l { last-window }",
bind l select-pane -R

# TODO: Resolve conflict with <, > keybindings
# bind < { display-menu -xW -yW -T '#[align=centre]#{window_index}:#{window_name}' " DEFAULT_WINDOW_MENU " }",
# "bind > { display-menu -xP -yP -T '#[align=centre]#{pane_index} (#{pane_id})' " DEFAULT_PANE_MENU " }",
#bind -r < resize-pane -L 5
bind -r - resize-pane -D 5
bind -r + resize-pane -U 5
#bind -r > resize-pane -R 5

bind C-s command-prompt -p "Send pane to:"  "join-pane -t :'%%'"
# }}}

# {{{ Copy mode
set-window-option -g mode-keys vi

# Not sure why this is not defaults when y has is bound to nothing by default
bind -T copy-mode-vi y send-keys -X copy-selection
# }}}

# {{{ Dracula color scheme
DRACULA_BG=#282a36
DRACULA_CURR_LINE=#44475a
DRACULA_FG=#f8f8f2
DRACULA_COMMENT=#6272a4
DRACULA_CYAN=#8be9fd
DRACULA_GREEN=#50fa7b
DRACULA_ORANGE=#ffb86c
DRACULA_PINK=#ff79c6
DRACULA_PURPLE=#bd93f9
DRACULA_RED=#ff5555
DRACULA_YELLOW=#f1fa8c

set -g pane-border-style fg=$DRACULA_COMMENT
set -g pane-active-border-style fg=$DRACULA_ORANGE
set -g message-style bg=$DRACULA_CURR_LINE,fg=$DRACULA_CYAN
# }}}

# {{{ Status line settings
set -g status on
#set -g status-position top
set -g status-keys vi
set -g status-interval 3 # Update every 3 seconds
set -g status-style bg=$DRACULA_BG,fg=$DRACULA_FG

# Left side of the status line
set -g status-left-style default
set -g status-left-length 30
set -g status-left "  "
set -ga status-left "#[fg=$DRACULA_PINK]  #{?client_prefix,#[fg=yellow]PREFIX,#S}" # -a for appending, ? for conditional, #S is session name
set -ga status-left "#[fg=$DRACULA_COMMENT] | "

# Right side of the status line
set -g status-right ""
set -g status-right-length 30
set -ga status-right "#[fg=$DRACULA_ORANGE]󰉋 #(basename #{pane_current_path})" # Using bash's basename command
set -ga status-right "#[fg=$DRACULA_COMMENT] | "
set -ga status-right "#[fg=$DRACULA_GREEN]  #{pane_current_command}"
set -ga status-right "  "

# Window list
set -g status-justify left # position of window list: left, right, centre
# Current window
set -g window-status-current-format "#[bg=$DRACULA_ORANGE,fg=$DRACULA_CURR_LINE] *#I: #W "
# Inactive window
set -g window-status-format "#[bg=$DRACULA_COMMENT,fg=$DRACULA_CURR_LINE] #I: #W "
# }}}

